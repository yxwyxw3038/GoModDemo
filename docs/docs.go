// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-09-26 11:00:48.1103001 +0800 CST m=+0.043000001

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "目前仅仅是一个demo",
        "title": "Rest API",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/GetUserByID": {
            "post": {
                "description": "根据用户ID获取用户信息 请求主体: ID=base64(aaaa) 成功输出User",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "根据用户ID获取用户信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Token",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "ID",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"Code\":1,\"Data\":{User},\"Message\":\"\"} or {\"Code\":-1,\"Data\":{},\"Message\":\"错误提示\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/Login": {
            "post": {
                "description": "验证用户名密码有效性 accountName=aaa\u0026passWord=base64(bbb) 成功输出Token",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "登录验证服务",
                "parameters": [
                    {
                        "type": "string",
                        "default": "yxw",
                        "description": "用户名",
                        "name": "accountName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "123",
                        "description": "密码",
                        "name": "passWord",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"Code\":1,\"Data\":{Token},\"Message\":\"\"} or {\"Code\":-1,\"Data\":{},\"Message\":\"错误提示\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/helper": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "State",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"Code\":,\"Data\":{},\"Message\":\"ok\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
